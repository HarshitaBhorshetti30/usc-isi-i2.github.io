@article{knoblock2015exploiting,
  title={Exploiting Semantics for Big Data Integration},
  author={Knoblock, Craig A and Szekely, Pedro},
  journal={AI Magazine},
  volume={36},
  number={1},
  pages={25--38},
  year={2015}
}

@article{nourjou2014intelligent,
  title={Intelligent algorithm for assignment of agents to human strategy in centralized multi-agent coordination},
  author={Nourjou, Reza and Smith, Stephen F and Hatayama, Michinori and Szekely, Pedro},
  journal={Journal of Software},
  volume={9},
  number={10},
  pages={2586--2597},
  year={2014}
}

@article{nourjou2014data,
  title={Data model of the strategic action planning and scheduling problem in a disaster response team},
  author={Nourjou, Reza and Szekely, Pedro and Hatayama, Michinori and Ghafory-Ashtiany, Mohsen and Smith, Stephen F},
  journal={Journal of Disaster Research},
  volume={9},
  number={3},
  pages={381--399},
  year={2014}
}

@article{nourjou2014dynamic,
  title={Dynamic assignment of geospatial-temporal macro tasks to agents under human strategic decisions for centralized scheduling in multi-agent systems},
  author={Nourjou, Reza and Smith, Stephen F and Hatayama, Michinori and Okada, Norio and Szekely, Pedro},
  journal={International Journal of Machine Learning and Computing (IJMLC)},
  volume={4},
  number={1},
  pages={39--46},
  year={2014}
}

@article{szekely2014publishing,
  title={Publishing the Data of the Smithsonian American Art Museum to the Linked Data Cloud},
  author={Szekely, Pedro and Knoblock, Craig A and Yang, Fengyu and Fink, Eleanor E and Gupta, Shubham and Allen, Rachel and Goodlander, Georgina},
  journal={International Journal of Humanities and Arts Computing},
  volume={8},
  number={supplement},
  pages={152--166},
  year={2014},
  publisher={Edinburgh University Press 22 George Square, Edinburgh EH8 9LF UK}
}

@article{tuchinda11:acmtw,
author = {Tuchinda, Rattapoom and Knoblock, Craig A and Szekely, Pedro},
title = {{Building Mashups by Demonstration}},
journal = {ACM Transactions on the Web (TWEB)},
year = {2011},
volume = {5},
number = {3},
pages = {1--45},
month = jul,
keywords = {gully, "Mashup Construction", "Mashup Construction", karma},
doi = {10.1145/1993053.1993058},
rating = {0},
date-added = {2013-01-18T02:06:42GMT},
date-modified = {2013-05-02T16:22:57GMT},
url = {http://dl.acm.org/citation.cfm?id=1993053.1993058},
urllink = {http://dl.acm.org/citation.cfm?id=1993053.1993058},
urlpaper = {http://www.isi.edu/~szekely/contents/papers/2011/tuchinda11-acmtw.pdf},
uri = {\url{papers2://publication/doi/10.1145/1993053.1993058}}
}


@article{Zanden:2005,
author = {Vander Zanden, Bradley T and Halterman, Richard L and Myers, Brad A and Miller, Robert C and Szekely, Pedro and Giuse, Dario A and Kosbie, David S and McDaniel, Richard G},
title = {{Lessons learned from programmers' experiences with one-way constraints}},
journal = {Softw, Pract. Exper},
year = {2005},
volume = {35},
number = {13},
pages = {1275--1298},
rating = {0},
date-added = {2013-01-18T02:06:42GMT},
date-modified = {2013-05-02T16:22:57GMT},
Urlpaper = {http://dx.doi.org/10.1002/spe.671},
uri = {\url{papers2://publication/uuid/51DF7DBB-F2C5-4A9F-A8C6-1B54DA6BE8A2}}
}

@article{Cai:2004,
author = {Cai, Min and Frank, Martin and Chen, Jinbo and Szekely, Pedro},
title = {{MAAN: A Multi-Attribute Addressable Network for Grid Information Services}},
journal = {Journal of Grid Computing},
year = {2004},
volume = {2},
number = {1},
pages = {184--191},
doi = {http://www.springerlink.com/openurl.asp?genre=article{\&}id=doi:10.1007/s10723-004-1184-y},
rating = {0},
date-added = {2013-01-18T02:06:42GMT},
date-modified = {2013-05-02T16:22:57GMT},
abstract = {Recent structured peer-to-peer (P2P) systems such as distributed hash tables (DHTs) offer scalable key-based lookup for distributed resources. However, they cannot be simply applied to grid information services because grid resources need to be registered and searched using multiple attributes. We propose a multiattribute addressable network (MAAN) which extends chord to support multiattribute and range queries. MAAN addresses range queries by mapping attribute values to the chord identifier space via uniform locality preserving hashing. It uses an iterative or single attribute dominated query routing algorithm to resolve multiattribute based queries. Each node in MAAN only has O(logN) neighbors for N nodes. The number of routing hops to resolve a multiattribute range query is O(logN+N times;smin), where smin is the minimum range selectivity on all attributes. When smin= {\#}949;, it is logarithmic to the number of nodes, which is scalable to a large number of nodes and attributes. We also measured the performance of our MAAN implementation and the experimental results are consistent with our theoretical analysis.},
url = {http://www.springerlink.com/openurl.asp?genre=article&id=doi:10.1007/s10723-004-1184-y},
Urlpaper = {http://www.isi.edu/~szekely/contents/papers/2004/maan2004journal.pdf},
uri = {\url{papers2://publication/doi/http://www.springerlink.com/openurl.asp?genre=article&id=doi:10.1007/s10723-004-1184-y}}
}

@article{Zanden:2001,
author = {Vander Zanden, Bradley T and Halterman, Richard and Myers, Brad A and McDaniel, Rich and Miller, Rob and Szekely, Pedro and Giuse, Dario A and Kosbie, David},
title = {{Lessons learned about one-way, dataflow constraints in the Garnet and Amulet graphical toolkits}},
journal = {Transactions on Programming Languages and Systems (TOPLAS)},
year = {2001},
volume = {23},
number = {6},
pages = {776--796},
month = nov,
publisher = { ACM  Request Permissions},
doi = {10.1145/506315.506318},
rating = {0},
date-added = {2011-06-27T19:17:16GMT},
date-modified = {2013-05-02T16:22:57GMT},
abstract = {One-way, dataflow constraints are commonly used in graphical interface toolkits, programming en- vironments, and circuit applications. Previous papers on dataflow constraints have focused on the design and implementation of individual algorithms. In contrast, this article focuses on the lessons we have learned from a decade of implementing competing algorithms in the Garnet and Amulet graphical interface toolkits. These lessons reveal the design and implementation tradeoffs for dif- ferent one-way, constraint satisfaction algorithms. The most important lessons we have learned are that (1) mark-sweep algorithms are more efficient than topological ordering algorithms; (2) lazy and eager evaluators deliver roughly comparable performance for most applications; and (3) con- straint satisfaction algorithms have more than adequate speed, except that the storage required by these algorithms can be problematic.},
url = {http://portal.acm.org/citation.cfm?id=506315.506318&coll=DL&dl=ACM&CFID=31276417&CFTOKEN=57440068},
Urlpaper = {http://www.isi.edu/~szekely/contents/papers/2001/lessons-learned-2002toplas.pdf},
uri = {\url{papers2://publication/doi/10.1145/506315.506318}}
}

@article{Zanden:1994,
author = {Vander Zanden, Brad and Myers, Brad A and Giuse, Dario A and Szekely, Pedro},
title = {{Integrating pointer variables into one-way constraint models}},
journal = {Transactions on Computer-Human Interaction (TOCHI)},
year = {1994},
volume = {1},
number = {2},
pages = {161--213},
month = jun,
publisher = { ACM  Request Permissions},
doi = {10.1145/180171.180174},
rating = {0},
date-added = {2011-06-27T19:16:43GMT},
date-modified = {2013-05-02T16:22:57GMT},
abstract = {Pointer variables have long been considered useful for constructing and manipulating data structures in traditional programming languages. This article discusses how pointer variables can be integrated into one-way constraint models and indicates how these constraints can be usefully employed in user interfaces. Pointer variables allow constraints to model a wide array of dynamic application behavior, simplify the implementation of structured objects and demonstrational systems, and improve the storage and efficiency of constraint-based applications. This article presents two incremental algorithms --- one lazy and one eager --- for solving constraints with pointer variables. Both algorithms are capable of handling (1) arbitrary systems of one-way constraints, including constraints that involve cycles, and (2) editing models that allow multiple changes between calls to the constraint solver. These algorithms are fault tolerant in that they can handle and recover gracefully from formulas that crash due to programmer error. Constraints that use pointer variables have been implemented in a comprehensive user interface toolkit, Garnet, and our experience with applications written in Garnet have proven the usefulness of pointer variable constraints. Many large-scale applications have been implemented using these constraints.},
url = {http://portal.acm.org/citation.cfm?id=180171.180174&coll=DL&dl=ACM&CFID=31276417&CFTOKEN=57440068},
Urlpaper = {http://www.isi.edu/~szekely/contents/papers/1994/integrating-pointer-variables-tochi-1994.pdf},
uri = {\url{papers2://publication/doi/10.1145/180171.180174}}
}

@article{Hayes:1983,
author = {Philip J. Hayes and Pedro Szekely},
title = {{Graceful Interaction Through the COUSIN Command Interface}},
journal = {International Journal of Man-Machine Studies},
year = {1983},
volume = {19},
number = {3},
pages = {285--306},
rating = {0},
date-added = {2013-01-18T02:06:42GMT},
date-modified = {2013-05-02T16:22:57GMT},
abstract = {Currently available interactive command interfaces often fail to provide adequate error correction or on-line help facilities, leading to the perception of an unfriendly interface and consequent frustration and reduced productivity on the part of the user. The COUSIN project of Carnegie-Mellon University is developing command interfaces which appear more friendly and supportive to their users, using a form-based model of communication, and incorporating error correction and on-line help. Because of the time and effort involved in constructing truly user-friendly interfaces, we are working on interface system designed to provide interfaces to many different application systems, as opposed to separate interfaces to individual applications. A COUSIN interface system gets the information it needs to provide these services for a given application from a declarative description of that application's communication needs.},
Urlpaper = {http://www.isi.edu/~szekely/contents/papers/1983/cousin83.pdf},
uri = {\url{papers2://publication/uuid/730621B2-5845-4985-A772-EEFCA75D3CEA}}
}
